# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def numComponents(self, head: ListNode, nums: List[int]) -> int:
    
        count=0
        while head!=None:
            tempnode = head
            
            if tempnode.val in nums:
                count+=1
                while tempnode.val in nums:
                    if tempnode.next:
                        tempnode = tempnode.next
                    else:
                        break
            else:
                head = tempnode.next
                
            head = tempnode.next
          
        
        
        return count
           
MY SPACE COMPLEXITY IS BETTER THEN TIME COMPLEXITY HERE.
Runtime: 1576 ms, faster than 16.32% of Python3 online submissions for Linked List Components.
Memory Usage: 18.2 MB, less than 86.67% of Python3 online submissions for Linked List Components.
