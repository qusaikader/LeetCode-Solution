class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        nums = sorted(nums)
        i = 0
        j = len(nums)-2
        while(i<len(nums)-2):
            check = (nums[i] ^ nums[i+1] == 0) and (nums[i+1] ^ nums[i+2] == 0)
            if check !=True:
                if nums[i] == nums[i+1]:
                    return nums[i+2]
                elif nums[i+1] == nums[i+2]:
                    return nums[i]
                else:
                    return nums[i+1] 
            else:
                i+=3
        return nums[-1]
            



Runtime: 52 ms, faster than 92.05% of Python3 online submissions for Single Number II.
Memory Usage: 15.7 MB, less than 81.07% of Python3 online submissions for Single Number II.
