class Solution:
    def addBinary(self, a: str, b: str) -> str:
        result = ""
        a = a[::-1]
        b = b[::-1]
        if len(a) > len(b):
            b += "0" * (len(a)-len(b))
        else:
            a += "0" * (len(b)-len(a))
        carry = 0
        for i in range(len(a)):
            current_sum = int(a[i]) + int(b[i]) + carry
            if current_sum == 3:
                current_sum = 1
                carry = 1
            elif current_sum == 2:
                current_sum = 0
                carry = 1
            else:
                carry = 0
            result += str(current_sum)
        if carry != 0:
            result += str(1)
        return result[::-1]
        
Runtime: 28 ms, faster than 93.36% of Python3 online submissions for Add Binary.
Memory Usage: 14.3 MB, less than 55.22% of Python3 online submissions for Add Binary

JAVA:
class Solution {
    public String addBinary(String a, String b) {
        String result = "";
        
        if (a.length() < b .length()){
            int diff = b.length() - a.length();
            for(int i = 0;i<diff;i++){
                a='0' + a;
            }
        }
        else if(b.length() < a.length()){
            int diff = a.length() - b.length();
            for(int i = 0;i<diff;i++){
                b ='0' + b;
                }
            }
        int carry = 0;
        int i = a.length()-1;
        while(i>=0){
            char m = a.charAt(i);
            char n = b.charAt(i);
            
            if((m=='0') && (n == '0')){
                if(carry!=0){
                    result='1' + result;
                    carry = 0;
                        
                }
                else{
                    result = '0' + result;
                }
            }
            else if((m == '1') && (n == '0')){
                if(carry!=0){
                    result = '0' + result;
                }
                else{
                    result = '1' + result;
                }
            }
            else if((m == '0') && (n == '1')){
                if(carry!=0){
                    result = '0' + result;
                }
                else{
                    result = '1' + result;
                }
            }
            else{
                if(carry!=0){
                    result = '1' + result;
                }
                else{
                    result = '0' + result;
                    carry = 1;
                }
            }
            i--;
        }
        if(carry!=0){
                    result = '1' + result;
        }
        
        
        return result;    
        
        }
    }
