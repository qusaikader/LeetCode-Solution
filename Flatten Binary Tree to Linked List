# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        if root:
            while root!=None:
                if root.left:
                    curr = root.left
                    while curr.right:
                        curr = curr.right
                    curr.right = root.right
                    root.right = root.left
                    root.left = None
                root = root.right
                
Runtime: 32 ms, faster than 92.70% of Python3 online submissions for Flatten Binary Tree to Linked List.
Memory Usage: 15.1 MB, less than 75.37% of Python3 online submissions for Flatten Binary Tree to Linked List.
