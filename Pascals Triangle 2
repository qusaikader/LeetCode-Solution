class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        triangle = []
        
        for row_num in range(rowIndex+1):
            row = [0]
            for i in range(row_num):
                row.append(0)
            row[0],row[-1] = 1, 1
            
            for j in range(1,row_num):
                row[j] = triangle[row_num -1][j-1] + triangle[row_num -1][j]
            
            if row_num == rowIndex:
                return row
            
            
            triangle.append(row)
            
<<<RESULT>>>
Runtime: 28 ms, faster than 86.01% of Python3 online submissions for Pascal's Triangle II.
Memory Usage: 14.3 MB, less than 19.30% of Python3 online submissions for Pascal's Triangle II.
