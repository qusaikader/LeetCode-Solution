Java:
class Solution {
    public int search(int[] nums, int target) {
        if(nums.length < 4){
            for(int i =0 ;i<nums.length;i++){
                if(nums[i] == target){
                    return i;
                }
            }
            return -1;
        }
        
        int index = BinarySearch(nums);
        System.out.println(index);
        int i = binarySearch(nums,target,index+1,nums.length-1);
        if(i == -1){
            int j = binarySearch(nums,target, 0,index);
            return j;
        }
        return i;


    }
    public int BinarySearch(int[] nums){
        int start = 0;
        int end = nums.length - 1;
        int index = -1;

        while(start<=end){
            int mid = (start+end)/2;
            if( mid < end && nums[mid] > nums[mid+1]){
                return mid;
            }
            else if(mid > start && nums[mid] < nums[mid-1]){
                return mid-1;
            }

            else if(nums[start] >= nums[mid]){
                end = mid -1;
            }
            else{
                start = mid +1;
            }
        }
        return index;
    }
    
    public int binarySearch(int[] nums, int target,int start,int end){
        int mid = (start+end)/2;
        if (start > end){
            return -1;
        }

        else if(nums[mid] > target){
            end  = mid - 1;
            return binarySearch(nums, target, start, end);

        }
        else if (nums[mid] < target){
            start = mid + 1;
            return binarySearch(nums, target, start, end);
        }
        else{
            return mid;
        }
    }
}
