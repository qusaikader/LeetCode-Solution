Python:
class Solution:
    def checkIfExist(self, arr: List[int]) -> bool:
        def binarySearch(nums,target):
            start = 0
            end  = len(nums) - 1
            while(start<=end):
                mid = int((start+end)/2)            
    
                if nums[mid]>target:
                    end = mid - 1

                elif nums[mid]<target:
                    start = mid + 1

                else:
                    return True
            return False
        
        for i in arr:
            target = 2 * i
            if i == 0 and arr.count(0) == 1:
                continue
                

            if(binarySearch(sorted(arr),target)):
                return True


        return False

JAVA:
LINEAR SEARCH:
class Solution {
    public boolean checkIfExist(int[] arr) {
        
        for(int i=0;i<arr.length;i++){
            int temp = arr[i];
            for(int j = 0;j<arr.length;j++){
                if(((arr[j] * 2) == temp) && (i!=j)){
                    return true;
                }
            }
        }
        
        return false;
    }
}


BINARY SEARCH:
class Solution {
    public boolean checkIfExist(int[] arr) {
        Arrays.sort(arr);
    
        
        for(int i=0;i<arr.length;i++){
            int target = 2 * arr[i];
            
            if(binarySearch(arr,target,0,arr.length-1,i) == true){
                return true;
            }
        }
        
        return false;
    }
    
    public boolean binarySearch(int[] nums, int target,int start,int end,int x){
        int mid = (start+end)/2;
        if (start > end){
            return false;
        }

        else if(nums[mid] > target){
            end  = mid - 1;
            return binarySearch(nums, target, start, end,x);

        }
        else if (nums[mid] < target){
            start = mid + 1;
            return binarySearch(nums, target, start, end,x);
        }
        
        else if(mid == x){
            start = mid + 1;
            return binarySearch(nums, target, start, end,x);
        }
        
        else{
            return true;
        }
    
    
    }
}
