class Solution:
    def numberOfSteps(self, num: int) -> int:
        
        """
        Method 1: Iterative
        """
        
        
        count = 0
        while num!=0:
            if num & 1 != 1:
                num = int(num/2)
            else:
                num = num -1
            count+=1
        return count
        
Runtime: 32 ms, faster than 63.04% of Python3 online submissions for Number of Steps to Reduce a Number to Zero.
Memory Usage: 14.2 MB, less than 69.50% of Python3 online submissions for Number of Steps to Reduce a Number to Zero.
        
        
        """
        Method 2: Recursion
        """
        def fun(n,cnt):
            if n == 1:
                cnt+=1
                return cnt
            else:
                if n & 1 == 1:
                    n = n-1
                else:
                    n = int(n/2)
                cnt+=1
                return fun(n,cnt)
        
        if num ==0:
            return 0
        return fun(num,0)
        
Runtime: 16 ms, faster than 99.85% of Python3 online submissions for Number of Steps to Reduce a Number to Zero.
Memory Usage: 14.3 MB, less than 38.86% of Python3 online submissions for Number of Steps to Reduce a Number to Zero
