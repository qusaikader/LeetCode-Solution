Python:
Method 1:
         ans = []
         for i in range(len(nums)):
             sum = nums[i]
             for j in range(i):
                 sum+=nums[j]
             ans.append(sum)   
         return ans


Method 2:           
         ans = []
         for i in range(len(nums)):
             ans.append(sum(nums[:i+1]))
         return ans


Method 3:
          for i in range(1,len(nums)):
              nums[i]= nums[i]+nums[i-1]
            
          return nums

Runtime: 40 ms, faster than 69.65% of Python3 online submissions for Running Sum of 1d Array.
Memory Usage: 14.4 MB, less than 44.26% of Python3 online submissions for Running Sum of 1d Array.

Java:
class Solution {
    public int[] runningSum(int[] nums) {
        
        for(int i=1;i<nums.length;i++){
            nums[i] = nums[i] + nums[i-1];
        }
        return nums;           
    }
}

Runtime: 0 ms, faster than 100.00% of Java online submissions for Running Sum of 1d Array.
Memory Usage: 38.8 MB, less than 92.73% of Java online submissions for Running Sum of 1d Array.
