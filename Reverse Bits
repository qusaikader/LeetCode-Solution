class Solution:
    def reverseBits(self, n: int) -> int:
        ''''
        x = (bin(n).replace("0b",""))[::-1]

        if len(x) != 32:
            y = "0" * (32 - len(x))
            x = x + y
        
        return (int(x,2))
        ''''

        result = 0
        shift = 31
        while n:
            bit = n & 1
            result = result | bit << shift
            shift -= 1
            n >>= 1
        return result
        
        
Runtime: 28 ms, faster than 91.21% of Python3 online submissions for Reverse Bits.
Memory Usage: 14.2 MB, less than 69.24% of Python3 online submissions for Reverse Bits.
