Python:
class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
    
        def binarySearch(nums,target,start,end):
            mid = int((start+end)/2)
            if start > end:
                return -1

            elif nums[mid] == target:
                return mid

            elif nums[mid] > target:
                end = mid - 1 
                return binarySearch(nums,target,start,end)

            else:
                start = mid + 1
                return binarySearch(nums,target,start,end)
                   
        for i in range(len(numbers)):
            tg = target - numbers[i]
            x = binarySearch(numbers,tg,i+1,len(numbers)-1)
            if x != -1:
                return [i+1,x+1]

Runtime: 112 ms, faster than 12.49% of Python3 online submissions for Two Sum II - Input Array Is Sorted.
Memory Usage: 14.7 MB, less than 63.63% of Python3 online submissions for Two Sum II - Input Array Is Sorted.
                
                
