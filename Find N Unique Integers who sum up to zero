Python:
class Solution:
    def sumZero(self, n: int) -> List[int]:
        result = []
        if n == 1:
            return [0];
        else:
            if n%2==0:
                x = int(n/2)
                for i in range(n-1,x-1,-1):
                    result.append(i)
                    result.append(-i)
            else:
                result.append(0)
                for i in range(n-1,int(n/2),-1):
                    result.append(i)
                    result.append(-i)
                    
        
        return result
Runtime: 32 ms, faster than 81.45% of Python3 online submissions for Find N Unique Integers Sum up to Zero.
Memory Usage: 14.1 MB, less than 90.93% of Python3 online submissions for Find N Unique Integers Sum up to Zero

JAVA:
class Solution {
    public int[] sumZero(int n) {    
        
        int[] result = new int[n];
        if(n%2==0){
            int x = (int)(n/2);
            int j = 0;
            for(int i = n-1;i>x-1;i--){
                result[j] = i;
                j++;
                result[j] = -i;
                j++; 
            }
        }
        else{
            int k = 1;
            result[0] = 0;
            for(int i = n-1;i>(int)(n/2);i--){
                result[k] = i;
                k++;
                result[k] = -i;
                k++; 
                
            }
        }
        return result;
    }
}

Runtime: 0 ms, faster than 100.00% of Java online submissions for Find N Unique Integers Sum up to Zero.
Memory Usage: 37.5 MB, less than 40.66% of Java online submissions for Find N Unique Integers Sum up to Zero.
