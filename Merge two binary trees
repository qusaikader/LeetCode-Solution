# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def mergeTrees(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> Optional[TreeNode]:
            if root1 == None:
                return root2
            if root2 == None:
                return root1
            root1.val += root2.val
            root1.left = self.mergeTrees(root1.left,root2.left)
            root1.right = self.mergeTrees(root1.right,root2.right)

            return root1

Runtime: 84 ms, faster than 95.03% of Python3 online submissions for Merge Two Binary Trees.
Memory Usage: 15.5 MB, less than 47.09% of Python3 online submissions for Merge Two Binary Trees.
