Python:

Method 1:
        movements = []
        for i in moves:
            if i == "U":
                if "D" in movements:
                    movements.remove("D")
                else:
                    movements.append("U")
            if i == "D":
                if "U" in movements:
                    movements.remove("U")
                else:
                    movements.append("D")
            if i == "R":
                if "L" in movements:
                    movements.remove("L")
                else:
                    movements.append("R")
            if i == "L":
                if "R" in movements:
                    movements.remove("R")
                else:
                    movements.append("L")
        
        if len(movements) == 0:
            return True
        else:
            return False

Method 2:
        dic = {"U":0,"D":0,"L":0,"R":0}
        for i in dic.keys():
            dic[i] = moves.count(i)

        if(dic["U"] == dic["D"] and dic["L"] == dic["R"]):
            return True
        else:
            return False
Runtime: 61 ms, faster than 53.95% of Python3 online submissions for Robot Return to Origin.
Memory Usage: 14.5 MB, less than 50.89% of Python3 online submissions for Robot Return to Origin.

Java:
class Solution {
    public boolean judgeCircle(String moves) {
        int[] xy = new int[2];
        for(int i = 0;i<moves.length();i++){
            if(moves.charAt(i) == 'U'){
                xy[0]++;
            }
            else if(moves.charAt(i) == 'D'){
                xy[0]--;
            }
            else if(moves.charAt(i) == 'R'){
                xy[1]++;
            }
            else if(moves.charAt(i) == 'L'){
                xy[1]--;
            }
        }
        if((xy[0] == 0) && (xy[1] == 0)){
            return true;
        }
        else{
            return false;
        }
        
    }
        
}
